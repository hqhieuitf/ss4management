@{
    ViewBag.Title = "BÁO CÁO TỔNG HỢP CHẤT LƯỢNG SẢN PHẨM";
    string CurrDay = string.Format("0{0}", DateTime.Now.Day.ToString());
    string CurrMonth = string.Format("0{0}", DateTime.Now.Month.ToString());
    string CurrYear = DateTime.Now.Year.ToString();
}

<style>    
    th[data-title="Mô tả lỗi"],
    th[data-title="CODE"] {
        vertical-align: middle!important;
        text-align: center!important;
        text-transform:uppercase;
    }
    .k-grid-header th.k-header {
        color:#101010;
        padding: 3px 5px;
    }
    .grouppb {
        background-color: #f9f487 !important;
    }
    .grouptotal {
        background-color: #f5f7f8 !important;
        font-weight: bold;
    }

    .clsSunday {
        background-color: #ef4949 !important;
    }
    .clscenter {
        text-align:center;
    }
    .clsleft {
        text-align:left;
    }
    .clsright {
        text-align:right;
    }
    .blackcolor {
        color: #333;
    }

    #cbFNgay, #cbFThang, #cbFNam {
        color: #333;
        height: 27px;
        border: none;
        border-radius: 5px;
    }
</style>
<script type="text/javascript">
    var arrProduct = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewData["tblProduct"]));
</script>
<script type="text/x-kendo-template" id="template">
    <div class="toolbar">
        <label class="category-label" style="display:none;">Tháng năm:&nbsp;</label>
        <select id="cbFNgay" style="display:none;">
            <option value="01" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "01" ? "selected='selected'" : "")>01</option>
            <option value="02" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "02" ? "selected='selected'" : "")>02</option>
            <option value="03" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "03" ? "selected='selected'" : "")>03</option>
            <option value="04" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "04" ? "selected='selected'" : "")>04</option>
            <option value="05" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "05" ? "selected='selected'" : "")>05</option>
            <option value="06" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "06" ? "selected='selected'" : "")>06</option>
            <option value="07" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "07" ? "selected='selected'" : "")>07</option>
            <option value="08" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "08" ? "selected='selected'" : "")>08</option>
            <option value="09" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "09" ? "selected='selected'" : "")>09</option>
            <option value="10" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "10" ? "selected='selected'" : "")>10</option>
            <option value="11" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "11" ? "selected='selected'" : "")>11</option>
            <option value="12" @Html.Raw(CurrDay.Substring(CurrDay.Length-2) == "12" ? "selected='selected'" : "")>12</option>
            <option value="13" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "13" ? "selected='selected'" : "")>13</option>
            <option value="14" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "14" ? "selected='selected'" : "")>14</option>
            <option value="15" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "15" ? "selected='selected'" : "")>15</option>
            <option value="16" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "16" ? "selected='selected'" : "")>16</option>
            <option value="17" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "17" ? "selected='selected'" : "")>17</option>
            <option value="18" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "18" ? "selected='selected'" : "")>18</option>
            <option value="19" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "19" ? "selected='selected'" : "")>19</option>
            <option value="20" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "20" ? "selected='selected'" : "")>20</option>
            <option value="21" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "21" ? "selected='selected'" : "")>21</option>
            <option value="22" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "22" ? "selected='selected'" : "")>22</option>
            <option value="23" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "23" ? "selected='selected'" : "")>23</option>
            <option value="24" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "24" ? "selected='selected'" : "")>24</option>
            <option value="25" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "25" ? "selected='selected'" : "")>25</option>
            <option value="26" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "26" ? "selected='selected'" : "")>26</option>
            <option value="27" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "27" ? "selected='selected'" : "")>27</option>
            <option value="28" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "28" ? "selected='selected'" : "")>28</option>
            <option value="29" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "29" ? "selected='selected'" : "")>29</option>
            <option value="30" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "30" ? "selected='selected'" : "")>30</option>
            <option value="31" @Html.Raw(CurrDay.Substring(CurrDay.Length - 2) == "31" ? "selected='selected'" : "")>31</option>
        </select>
        <select id="cbFThang" style="display:none;">
            <option value="01" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "01" ? "selected='selected'" : "")>Tháng 01</option>
            <option value="02" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "02" ? "selected='selected'" : "")>Tháng 02</option>
            <option value="03" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "03" ? "selected='selected'" : "")>Tháng 03</option>
            <option value="04" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "04" ? "selected='selected'" : "")>Tháng 04</option>
            <option value="05" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "05" ? "selected='selected'" : "")>Tháng 05</option>
            <option value="06" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "06" ? "selected='selected'" : "")>Tháng 06</option>
            <option value="07" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "07" ? "selected='selected'" : "")>Tháng 07</option>
            <option value="08" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "08" ? "selected='selected'" : "")>Tháng 08</option>
            <option value="09" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "09" ? "selected='selected'" : "")>Tháng 09</option>
            <option value="10" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "10" ? "selected='selected'" : "")>Tháng 10</option>
            <option value="11" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "11" ? "selected='selected'" : "")>Tháng 11</option>
            <option value="12" @Html.Raw(CurrMonth.Substring(CurrMonth.Length-2) == "12" ? "selected='selected'" : "")>Tháng 12</option>
        </select>
        <select id="cbFNam" style="display:none;">
            <option value="2016" @Html.Raw(CurrYear.Substring(CurrYear.Length-2) == "2016" ? "selected='selected'" : "")>2016</option>
            <option value="2017" @Html.Raw(CurrYear.Substring(CurrYear.Length-2) == "2017" ? "selected='selected'" : "")>2017</option>
            <option value="2018" @Html.Raw(CurrYear.Substring(CurrYear.Length-2) == "2018" ? "selected='selected'" : "")>2018</option>
            <option value="2019" @Html.Raw(CurrYear.Substring(CurrYear.Length-2) == "2019" ? "selected='selected'" : "")>2019</option>
            <option value="2020" @Html.Raw(CurrYear.Substring(CurrYear.Length-2) == "2020" ? "selected='selected'" : "")>2020</option>
        </select>

        <label>Sản phẩm</label>
        <input id="cbProduct" name="cbProduct" placeholder="Chọn sản phẩm" style="width: 360px"  />        
        <label>Từ ngày</label>
        <input type="search" id="cbxFromDate" placeholder="Từ ngày" style="width: 160px;" />
        <label>Đến ngày</label>
        <input type="search" id="cbxToDate" placeholder="Đến ngày" style="width: 160px;" />
        <button type="button" class="btn blackcolor btn-sm margin-right-5" id="btnXem">
            <span class="glyphicon glyphicon-floppy-save margin-right-5" aria-hidden="true"></span> XEM
        </button>
    </div>
</script>
<div id="wrapperMain">

    <!-- action buttons -->
    <div class="subhead-collapse" style="height: 43px;">
        <div class="subhead">
            <div class="container-fluid">
                <div id="container-collapse" class="container-collapse"></div>
                <div class="row-fluid">
                    <div class="col-sm-12">
                        <div class="btn-toolbar" id="toolbar">

                            <div class="btn-wrapper" id="toolbar-apply">
                                @if (clsShared.checkPermission("print", "report", "rpt_checkproduct"))
                                {
                                <button type="button" class="btn btn-primary btn-sm margin-right-5" style="position:absolute;right:0px;" data-bind="click: onClick_Print">
                                    <span class="glyphicon glyphicon-print margin-right-5" aria-hidden="true"></span> PRINT
                                </button>
                                }
@if (clsShared.checkPermission("excel", "report", "rpt_checkproduct"))
{
                                <button type="button" class="btn btn-primary btn-sm" style="position:absolute;right:90px;" data-bind="click: onClick_Excel">
                                    <span class="glyphicon glyphicon-download-alt margin-right-5" aria-hidden="true"></span> EXCEL
                                </button>
}
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="wrapperContainer" style="height:100%">
        <div class="wrapperGrid grid-section k-content wide">
            <div>
                <span id="notification"></span>
                <div id="gridMain"></div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#breadcrumb').html('Báo cáo <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span> Thống kê lỗi sản phẩm');
        viewModel.onInitGrid();
        kendo.bind($("#wrapperMain"), viewModel);

        viewModel.resizeGrid();
    });
    var viewModel = kendo.observable({
        isVisible: true,
        selectedRow: null,
        ModelEntity: function () { return kendo.observable({ data: {} }); },
        data: null,
        sTungay: null,
        sDenngay: null,
        ProductId : -1,  
        ContId: -1,
        //ultis
        replaceStr: function(strInput, strOld, strNew){
            var s = strInput;
            while(s.indexOf(strOld) != -1){
                s = s.replace(strOld, strNew);
            }
            return s;
        },
        //helper
        getProductName : function(productid){
            for(var i=0; i< arrProduct.length; i++){
                if(productid == arrProduct[i].id)
                    return arrProduct[i].name;
            }
            return "";
        },
        getContName: function(contid){
            for(var i=0; i< arrCont.length; i++){
                if(contid == arrCont[i].id)
                    return arrCont[i].name;
            }
            return "";
        },
        getLineName: function(lineid){
            for(var i=0; i< arrLine.length; i++){
                if(lineid == arrLine[i].id)
                    return arrLine[i].name;
            }
            return "";
        },
        onInitCate: function(){
            var arrSP = [];
            arrSP.push({id: -1, name: 'Tất cả'});
            for(var i=0; i< arrProduct.length; i++) arrSP.push(arrProduct[i]);
            $("#cbProduct").kendoComboBox({
                dataTextField: "name",
                dataValueField: "id",
                dataSource: arrSP,
                filter: "contains",
                suggest: true
            });
            var cb = $("#cbProduct").data("kendoComboBox"); cb.value(this.ProductId);            
        },

        _dataSource: null,
        getData: function (data) {
            var tmpData = [];
            var arrO = Object.keys(data[0]);
            for (var i = 0; i < data.length; i++) {
                var oItem = {};
                oItem['code'] = data[i]['code'];
                oItem['desc'] = data[i]["desc"];
                oItem['dk'] = data[i]["dk"];
                oItem['stt'] = data[i]["stt"];
                oItem['errcodeid'] = data[i]["errcodeid"];
                oItem['group'] = data[i]["group"];

                for (var j = 0; j < arrO.length; j++) {
                    if (arrO[j] != "code" && arrO[j] != "desc" && 
                        arrO[j] != "dk" && 
                        arrO[j] != "stt" && 
                        arrO[j] != "errcodeid" && 
                        arrO[j] != "group") {
                        if (data[i]["group"] == 1) {
                            if(data[i][arrO[j]] == null)
                                oItem['s' + this.replaceStr(arrO[j], '-', '__') ] = ".";
                            else 
                                oItem['s' + this.replaceStr(arrO[j], '-', '__')] = parseFloat(  data[i][arrO[j]].toString() ).formatMoney(',','.',0) + ' %';
                        }
                        else {
                            if (data[i][arrO[j]] != null)                                
                                oItem['s' + this.replaceStr(arrO[j], '-', '__')] = parseFloat(  data[i][arrO[j]].toString() );
                            else
                                oItem['s' + this.replaceStr(arrO[j], '-', '__')] = data[i][arrO[j]] ? parseFloat( data[i][arrO[j]].toString() ): ".";

                            if(oItem['dk'].indexOf('%') != -1){
                                if(oItem['s' + this.replaceStr(arrO[j], '-', '__')] != '.'){
                                    oItem['s' + this.replaceStr(arrO[j], '-', '__')] = parseFloat(oItem['s' + this.replaceStr(arrO[j], '-', '__')]).formatMoney(',','.',0) + ' %';
                                }
                            }
                        }
                    }
                }
                tmpData.push(oItem);
            }
            return tmpData;
        },
        onInitGrid: function () {
            var thisObj = this;
            if(thisObj.sTungay == null){
                var now = new Date();
                var thang = now.getMonth()+1 < 10 ? '0' + (now.getMonth()+1).toString() : (now.getMonth()+1).toString();
                var nam = now.getFullYear().toString();
                var ngay =now.getDate() < 10 ? '0' + (now.getDate()).toString() : (now.getDate()).toString();
                thisObj.sTungay = '01' + '/' + thang + '/' + nam;
                thisObj.sDenngay = ngay + '/' + thang + '/' + nam;                       
            }
            
            //this.onRefresh();
            $("#gridMain").kendoGrid({
                toolbar: kendo.template($("#template").html()),
                //dataSource: JsonGd,
                navigatable: true,
                groupable: false,
                sortable: false,
                resizable: true,
                reorderable: false,
                pageable: false,
                columnMenu: false,
                editable: true,
                columns:[
                    {
                        field: "code",
                        title: "CODE",
                        width: 80,
                        //locked: true,
                        //lockable: false
                    }, {
                        field: "desc",
                        title: "Mô tả lỗi",
                        width: 240,
                    },
                {
                    field: "dk",
                    title: "Sản phẩm",
                    width: 100,
                    columns: [
                        { 
                            title: 'Tổng số bao',
                            columns:[
                                { title: 'Tổng bao đạt' }
                            ]
                        }
                    ]
                }
                ]
            });

            
            $('#btnXem').click(function () {                
                thisObj.onRefresh();
            });
            var cbxFromDate = $("#cbxFromDate").kendoDatePicker({
                //value: new Date(new Date().getFullYear(), new Date().getMonth(), 1),
                parseFormats: ["dd/MM/yyyy"],
                format: "dd/MM/yyyy",
                //change: function () { thisObj.sTungay = $("#cbxFromDate").val(); }
            }).data("kendoDatePicker");
            var cbxToDate = $("#cbxToDate").kendoDatePicker({
                //value: new Date(new Date().getFullYear(), new Date().getMonth(), 1),
                parseFormats: ["dd/MM/yyyy"],
                format: "dd/MM/yyyy",
                //change: function () { thisObj.sDenngay = $('#cbxToDate').val();  }
            }).data("kendoDatePicker");
            $('#cbxFromDate').val(thisObj.sTungay);
            $('#cbxToDate').val(thisObj.sDenngay);
            this.onInitCate();
            this.onRefresh();
        },
        onRefresh: function () {
            var thisObj = this;
            thisObj.sTungay = $('#cbxFromDate').val();;
            thisObj.sDenngay = $('#cbxToDate').val();
            thisObj.ProductId = $('#cbProduct').val();
            thisObj.ContId = $('#cbCont').val();

            var grid = $("#gridMain").data("kendoGrid");
            grid.destroy();
            $("#gridMain").html('');

            clsApi.request('/Report/RPT_CheckProductById_Data', function (res) {
                thisObj.data = thisObj.getData(res);
                var JsonGd = new kendo.data.DataSource({ transport: { read: function (options) { options.success(thisObj.data); } } });
                var cols = [];
                var colTmp = [];
                cols.push({
                    field: "code",
                    title: "CODE",
                    width: 80,
                    attributes: { class: "clsCenter" },
                    locked: true,
                    lockable: false
                }, {
                    field: "desc",
                    title: "Mô tả lỗi",
                    width: 310,
                    attributes: { class: "clsCenter" },
                    locked: true,
                    lockable: false
                },
                {
                    title: "Sản phẩm",
                    field: "dk", width: 160, 
                    locked: true,
                    lockable: false                    
                    
                });
                var arrO = Object.keys(thisObj.data[0]);
                for (var i = 0; i < arrO.length; i++) {
                    if (arrO[i] != "code" && arrO[i] != "desc" && arrO[i] != "dk" && arrO[i] != "stt" && arrO[i] != "group" && arrO[i] != "errcodeid") {
                        cols.push({
                            title: thisObj.getProductName(arrO[i].replace('s','')),
                            field: arrO[i],
                            width: 260
                        });
                    }
                }                
                $("#gridMain").kendoGrid({
                    toolbar: kendo.template($("#template").html()),
                    dataSource: JsonGd,
                    //height: 540,
                    navigatable: true,
                    groupable: false,
                    sortable: false,
                    resizable: true,
                    reorderable: false,
                    pageable: false,
                    columnMenu: false,
                    editable: false,
                    //columns: cols.sort(SortArray),
                    columns: cols,
                    dataBound: function (e) {
                        var rows = e.sender.tbody.children();
                        for (var j = 0; j < rows.length; j++) {
                            var row = $(rows[j]);
                            var dataItem = e.sender.dataItem(row);
                            var group = dataItem.get("group");
                            if (group == 1) {
                                row.addClass("grouppb");
                                //truong hop locked [k-grid-content-locked + k-grid-content]
                                var id = $(row).attr('data-uid');
                                $('div.k-grid-content-locked table.k-selectable tr[data-uid="' + id + '"]').addClass('grouppb');
                                $('div.k-grid-content-locked table tr[data-uid="' + id + '"]').addClass('grouppb');
                            }
                            if (group == 0) {
                                row.addClass("grouptotal");
                                //truong hop locked [k-grid-content-locked + k-grid-content]
                                var id = $(row).attr('data-uid');
                                $('div.k-grid-content-locked table.k-selectable tr[data-uid="' + id + '"]').addClass('grouptotal');
                                $('div.k-grid-content-locked table tr[data-uid="' + id + '"]').addClass('grouptotal');
                            }
                        }
                    },
                    excelExport: function(e) {
                        var sheet = e.workbook.sheets[0];
                        var orgData = $('#gridMain').data('kendoGrid').dataSource._data;
                        var iFormat = [];
                        for(var i=0; i< orgData.length;i++){
                            if(orgData[i].group==1){
                                iFormat.push(i+1);
                            }
                        }
                        
                        for (var i = 0; i < sheet.rows.length; i++) {
                            var bHasGroup = false;
                            if(iFormat.indexOf(i)!=-1) bHasGroup = true;

                            for (var ci = 0; ci < sheet.rows[i].cells.length; ci++) {
                                if(bHasGroup){
                                    sheet.rows[i].cells[0].background = '#f9f487';
                                    sheet.rows[i].cells[1].background = '#f9f487';
                                }
                                if(!isNaN(sheet.rows[i].cells[ci].value) && sheet.rows[i].cells[ci].value != ''){
                                    sheet.rows[i].cells[ci].value = parseInt(sheet.rows[i].cells[ci].value).formatMoney(0,'.',',');
                                    sheet.rows[i].cells[ci].hAlign= "right";
                                    sheet.rows[i].cells[ci].vAlign= "center";
                                }
                                sheet.rows[i].cells[ci].borderBottom = { color: "#333", size: 1 };
                                sheet.rows[i].cells[ci].borderTop = { color: "#333", size: 1 };
                                sheet.rows[i].cells[ci].borderLeft = { color: "#333", size: 1 };
                                sheet.rows[i].cells[ci].borderRight = { color: "#333", size: 1 };
                                if(i==0||i==1||i==2){
                                    sheet.rows[i].cells[ci].background= "#f5f7f8";
                                    sheet.rows[i].cells[ci].hAlign= "center";
                                    sheet.rows[i].cells[ci].vAlign= "center";
                                    sheet.rows[i].cells[ci].color= "#333";

                                    if(!isNaN(sheet.rows[i].cells[ci].value) && sheet.rows[i].cells[ci].value != ''){
                                        sheet.rows[i].cells[ci].value = parseInt(sheet.rows[i].cells[ci].value).formatMoney(0,'.',',');
                                        sheet.rows[i].cells[ci].hAlign= "right";
                                        sheet.rows[i].cells[ci].vAlign= "center";
                                    }
                                }
                            }            
                        }    
                    },
                });
                                
                var cbxFromDate = $("#cbxFromDate").kendoDatePicker({
                    //value: new Date(new Date().getFullYear(), new Date().getMonth(), 1),
                    parseFormats: ["dd/MM/yyyy"],
                    format: "dd/MM/yyyy",
                    //change: function () { thisObj.sTungay = $("#cbxFromDate").val(); }
                }).data("kendoDatePicker");
                var cbxToDate = $("#cbxToDate").kendoDatePicker({
                    //value: new Date(new Date().getFullYear(), new Date().getMonth(), 1),
                    parseFormats: ["dd/MM/yyyy"],
                    format: "dd/MM/yyyy",
                    //change: function () { thisObj.sDenngay = $('#cbxToDate').val();  }
                }).data("kendoDatePicker");
                $('#cbxFromDate').val(thisObj.sTungay);
                $('#cbxToDate').val(thisObj.sDenngay);
                thisObj.onInitCate();
                //setTimeout(function(){
                    thisObj.resizeGrid(); 
                    $("#gridMain").data('kendoGrid').refresh(); 
                //}, 200);                

                $('#btnXem').unbind('click');
                $('#btnXem').click(function () {                    
                    thisObj.onRefresh();
                });
            }, function(){
                thisObj.onInitGrid();
            }, {
                data: { tungay: thisObj.sTungay, denngay: thisObj.sDenngay, productid: thisObj.ProductId }
            });
        },
        resizeGrid: function () {
            var gridElement = $(".wrapperGrid"),
                dataArea = gridElement.find(".k-grid-content"),
                gridHeight = gridElement.innerHeight(),
                otherElements = gridElement.children().not(".k-grid-content"),
                otherElementsHeight = 0;
            otherElements.each(function () {
                otherElementsHeight += $(this).outerHeight();
            });
            dataArea.height(ss4.Screen().height - (parseInt($('.navContainer').css('height')) + parseInt($('.header').css('height')) + parseInt($('.subhead-collapse').css('height')) + 158 + 20 ));
        },
        onClick_Excel: function(){
            var grid = $("#gridMain").data("kendoGrid");
            grid.saveAsExcel();
        },
        onClick_Print: function () {
            var gridElement = $('#gridMain'),
            printableContent = '',
            win = window.open('', '', 'width=800, height=500, resizable=1, scrollbars=1'),
            doc = win.document.open();

            var htmlStart =
                    '<!DOCTYPE html>' +
                    '<html>' +
                    '<head>' +
                    '<meta charset="utf-8" />' +
                    '<title>Bảng kiểm tra chất lượng bao thành phẩm, Từ ngày ' + $('#cbxFromDate').val() + ' đến ngày ' + $('#cbxToDate').val() + '</title>' +
                    '<link href="/Content/libs/kendo/css/2016.1.112/kendo.common.min.css" rel="stylesheet" /> ' +
                    '<style>' +
                    'html { font: 11pt sans-serif; }' +
                    '.k-grid { border-top-width: 0; }' +
                    '.k-grid, .k-grid-content { height: auto !important; }' +
                    '.k-grid-content { overflow: visible !important; }' +
                    'div.k-grid table { table-layout: auto; width: 100% !important; }' +
                    '.k-grid .k-grid-header th { border-top: 1px solid; }' +
                    '.k-grouping-header, .k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
                    // '.k-grid-pager { display: none; }' + // optional: hide the whole pager
                    '</style>' +
                    '</head>' +
                    '<body>';

            var htmlEnd =
                    '</body>' +
                    '</html>';

            var gridHeader = gridElement.children('.k-grid-header');
            if (gridHeader[0]) {
                var thead = gridHeader.find('thead').clone().addClass('k-grid-header');
                printableContent = gridElement
                    .clone()
                        .children('.k-grid-header').remove()
                    .end()
                        .children('.k-grid-content')
                            .find('table')
                                .first()
                                    .children('tbody').before(thead)
                                .end()
                            .end()
                        .end()
                    .end()[0].outerHTML;
            } else {
                printableContent = gridElement.clone()[0].outerHTML;
            }

            doc.write(htmlStart + printableContent + htmlEnd);
            doc.close();
            win.print();
        }

    });

</script>